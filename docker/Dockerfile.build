
# we can use any centos as base image...
# but we choose to use the pipvfx_pkgs
# one since we have it!

ARG PACKAGES
ARG BASE_IMAGE
ARG http
ARG https

#FROM $BASE_IMAGE
FROM centos:7.6.1810


ENV http_proxy=$http
ENV https_proxy=$https
ENV package_image=$PACKAGES

# yum parallel download
RUN [ ! -e /etc/yum/pluginconf.d/multithread.conf ] && \
    curl -O https://raw.githubusercontent.com/mjschultz/yum-multithread/master/multithread.py && \
    curl -O https://raw.githubusercontent.com/mjschultz/yum-multithread/master/multithread.conf && \
    mv ./multithread.py /usr/lib/yum-plugins && \
    mv ./multithread.conf /etc/yum/pluginconf.d/multithread.conf || \
    echo "done"

RUN echo yum update -y && yum install -y csh tcsh xz \
    nano libXp libXmu libXpm libXi libtiff libpng12 \
    xorg-x11-server-Xorg xorg-x11-server-Xvfb xorg-x11-fonts* \
    libXinerama-devel libXext-devel libXrandr-devel libXi-devel \
    libXcursor-devel libXxf86vm-devel libXinerama \
    mesa-utils mesa-libGL-devel mesa-libGLU  mesa-libGLU-devel SDL \
    git gcc gcc-c++ make scons binutils elfutils dbus-devel glibc-devel \
    readline-devel dbus-glib-devel cmake yaml-cpp* tinyxml* enca \
    tkinter ncurses ncurses-devel ncurses-static libcurl-devel \
    flex-devel sqlite-devel libdb-devel gdbm-devel \
    gstreamer-plugins-base.x86_64 gamin zip wget \
    freetype2 vulkan-devel python2-scons

# RUN yum groupinstall -y "X Window System" "Fonts"
RUN yum groupinstall -y "Development Tools" && fc-cache

RUN yum -y install epel-release
# remove mirrors from epel or else it will fail if there are no mirrors
# in the country the build machine is running
# RUN cat /etc/yum.repos.d/epel.repo \
#     | sed 's/.baseurl/baseurl/' \
#     | sed 's/metalink/#metalink/' > /tmp/epel.repo && \
#     /bin/mv /tmp/epel.repo /etc/yum.repos.d/epel.repo
RUN yum -y install centos-release-scl devtoolset-6

RUN ln -s /lib64/libbz2.so.1 /lib64/libbz2.so.1.0 ; \
    ln -s libcrypto.so.1.0.2k /usr/lib64/libcrypto.so.10 ; \
    ln -s libcrypto.so.0.9.8e /usr/lib64/libcrypto.so.6 ; \
    ln -s libssl.so.1.0.2k /usr/lib64/libssl.so.10 ; \
    ln -s libssl.so.0.9.8e /usr/lib64/libssl.so.6 ; \
    ln -s /usr/bin/ar /usr/sbin/ar ; \
    ln -s /usr/bin/ranlib /usr/sbin/ranlib

#_tkinter           bsddb185           dl
#imageop            sunaudiodev

# add default to gcc 6.3.1 to /etc/bashrc, so running bash will automatically set it
# RUN printf "\nsource scl_source enable devtoolset-6\n" >> /etc/bashrc

#	Install OSL dependencies
RUN	yum install -y flex bison

# we need this to build python3
RUN yum -y install libffi-devel tcl-devel tk-devel libXt-devel gcc-objc++

#	Install Qt dependencies
RUN	yum install -y fontconfig-devel.x86_64
# and we need this for qt 5.x
RUN yum -y install xcb-util-wm-devel libxcb-devel.x86_64 \
    xcb-util-image-devel.x86_64 xcb-util-keysyms-devel.x86_64 \
    xcb-util-renderutil-devel.x86_64 xcb-util-wm-devel.x86_64 \
    xkeyboard-config.noarch \
    install xcb*devel

# opencl
RUN yum -y install opencl-headers ocl-icd-devel

# cuda
# this package won't install from yum for some reason
# RUN yumPlugin=$(curl https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/ | grep yum-plugin | awk -F"'" '{print $4}' | sort  | tail -1) && \
#     curl -L https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/$yumPlugin -O && \
#     rpm -i $yumPlugin && \
#     rm -rf $yumPlugin
#
# RUN yum-config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo && \
#     yum clean all && \
#     yum -y install nvidia-driver-latest-dkms cuda cuda-drivers

# to get colors in the build log.
RUN yum -y install source-highlight

# copy over the latest packages from the latest pkg TAG image!
# this makes upload/download a large layer all the time,
# but prevents this image from being rebuild all the time when we add
# a new package.
COPY --from=hradec/pipevfx_pkgs:centos7_latest /atomo/pipeline/build/.download/*  /atomo/pipeline/build/.download/

# add strace
RUN yum -y install strace

# we need this for alembic opengl with maya
RUN yum -y install libXmu-devel

# we need inkscape for gaffer
RUN yum -y install inkscape python2-scons wget git zip

# we need pulseaudio to run maya
RUN yum install pulseaudio


# to avoid clashing in osl
RUN yum -y remove boost

# cleanup
RUN yum clean all
RUN rm -rf /var/cache/yum/*
ENV TERM=xterm
ENTRYPOINT "/run.sh"
