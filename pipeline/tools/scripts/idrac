#!/bin/bash

if [ "$1" == "" ] ; then 
	ip=192.168.0.254
	arg=$1
	extra=$2
elif [ "$(echo $1 | grep '-')" != "" ]  ; then
	ip=192.168.0.254
	arg=$1
	extra="$2 $3 $4 $5 $6 $7"
else
	ip=$1
	arg=$2
	extra="$3 $4 $5 $6 $7 $8"
fi

if [ "$arg" == "--reset"  ] ; then 
	ipmitool -I lanplus -H $ip -U root -P t  chassis  power reset

elif [ "$arg" == "--offon"  ] ; then 
	ipmitool -I lanplus -H $ip -U root -P t  chassis  power cycle

elif [ "$arg" == "--on"  ] ; then 
	ipmitool -I lanplus -H $ip -U root -P t  chassis  power on

elif [ "$arg" == "--off"  ] ; then 
	ipmitool -I lanplus -H $ip -U root -P t  chassis  power off

elif [ "$arg" == "--power-status"  ] ; then 
	ipmitool -I lanplus -H $ip -U root -P t  chassis  power status

elif [ "$arg" == "-c"  ] ; then 
	echo ipmitool -I lanplus -H $ip -U root -P t  $extra
	ipmitool -I lanplus -H $ip -U root -P t  $extra

elif [ "$arg" == "--serial"  ] || [ "$arg" == "-s" ] ; then 
	reset
	ipmitool -I lanplus -H $ip -U root -P t  sol deactivate
	ipmitool -I lanplus -H $ip -U root -P t  sol activate

else #if [ "$arg" == "-h"  ] || [ "$arg" == "--help" ] || [ "$arg" == "" ] || [ "$(echo $arg | grep '-')" == "" ] ; then 
	echo "
$(basename $0) - a simpler ipmitool wrapper 1.0

	$(basename $0) <ipmi ip> <option> ["ipmi commands"]
	
	--reset 	press the reset button virtually
	--onoff 	turn the machine off and back on again
	--on	 	turn the machine on
	--off	 	turn the machine off
	--power-status 	report if the power is on or off
	--serial (-s)	connect to the serial port over LAN
	-c 		send the following string as commands to ipmitool (just -c will show ipmitool help)

about --serial:

	Once in the serial console, one can type:

	~.  		terminate connection
	~?		help
	~^Z		suspend ipmitool
	~^X		suspend ipmitool, but don't restore tty on restart
	~B		send break
	~~		send the escape character by typing it twice


"

fi
